-- 부서코드가 노옹철 사원과 같은 부서 소속의 직원의
-- 이름, 부서코드 조회
SELECT EMP_NAME, DEPT_CODE
FROM EMPLOYEE
WHERE DEPT_CODE = (
SELECT DEPT_CODE
FROM EMPLOYEE
WHERE EMP_NAME = '노옹철');

-- 전 직원의 급여 평균보다 많은(초과) 급여를 받는 직원의
-- 이름, 직급명, 부서명, 급여를 직급 순으로 정렬하여 조회
SELECT * FROM JOB;


SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, SALARY
FROM EMPLOYEE 
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
WHERE SALARY > (
SELECT AVG(SALARY)
FROM EMPLOYEE)
ORDER BY JOB_CODE;


-- 부서별(부서가 없는 사람 포함) 급여의 합계 중
-- 가장 큰 부서의 부서면, 급여 합계를 조회
SELECT DEPT_TITLE, SUM(SALARY)
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
GROUP BY DEPT_TITLE
HAVING SUM(SALARY) = (
SELECT MAX(SUM(SALARY))
FROM EMPLOYEE
GROUP BY DEPT_CODE
);

-- 부서별 최고 급여를 받는 직원의
-- 이름, 직급, 부서, 급여를
-- 부서 오름차순으로 정렬하여 조회
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, SALARY
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
LEFT JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
WHERE SALARY IN(

SELECT MAX(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_CODE

)
ORDER BY DEPT_CODE ;

-- LOCATION 테이블에서 NATIONAL_CODE가 KO인 경우의 LOCAL_CODE와
-- DEPARTMENT 테이블의 LOCATION_ID와 동일한 DEPT_ID가
-- EMPLOYEE 테이블의 DEPT_CODE와 동일한 사원 조회해라.

SELECT * FROM LOCATION ;
SELECT * FROM DEPARTMENT ;

SELECT LOCAL_CODE
FROM LOCATION 
WHERE NATIONAL_CODE  = 'KO';

SELECT DEPT_ID
FROM DEPARTMENT 
JOIN LOCATION ON(LOCAL_CODE = LOCATION_ID)
WHERE LOCATION_ID = (
SELECT LOCAL_CODE
FROM LOCATION 
WHERE NATIONAL_CODE  = 'KO'
);

SELECT EMP_NAME, DEPT_ID
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
WHERE DEPT_CODE IN (
		SELECT DEPT_ID
		FROM DEPARTMENT 
		JOIN LOCATION ON(LOCAL_CODE = LOCATION_ID)
		WHERE LOCATION_ID = (
				SELECT LOCAL_CODE
				FROM LOCATION 
				WHERE NATIONAL_CODE  = 'KO'
				)
)
ORDER BY 2 DESC ;

-- 직급별 급여 평균보다 급여를 많이 받는 직원의
-- 이름, 직급코드, 급여 조회

SELECT EMP_NAME, JOB_CODE, SALARY
FROM EMPLOYEE MAIN
WHERE SALARY > ( SELECT AVG(SALARY)
								  FROM EMPLOYEE SUB
								  WHERE MAIN.JOB_CODE = SUB.JOB_CODE);

SELECT EMP_NAME, JOB_CODE, SALARY
FROM EMPLOYEE MAIN
WHERE SALARY > (SELECT AVG(SALARY)
								FROM EMPLOYEE SUB
								WHERE MAIN.JOB_CODE = SUB.JOB_CODE );	













